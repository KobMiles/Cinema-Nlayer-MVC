// <auto-generated />
using System;
using Cinema.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cinema.DAL.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    [Migration("20250430135003_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cinema.DAL.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Drama"
                        });
                });

            modelBuilder.Entity("Cinema.DAL.Entities.Hall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Halls");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        });
                });

            modelBuilder.Entity("Cinema.DAL.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PosterUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<float>("RatingScore")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrailerUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Movies", t =>
                        {
                            t.HasCheckConstraint("CK_Movie_Rating", "RatingScore BETWEEN 0.0 AND 10.0");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "An adrenaline-filled action movie.",
                            Duration = new TimeSpan(0, 2, 0, 0, 0),
                            Name = "Explosive Action",
                            PosterUrl = "https://example.com/explosive-action-poster.jpg",
                            RatingScore = 4.5f,
                            ReleaseDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://example.com/explosive-action-trailer.mp4"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A comedy that will make you laugh non-stop.",
                            Duration = new TimeSpan(0, 1, 30, 0, 0),
                            Name = "Laugh Out Loud",
                            PosterUrl = "https://example.com/laugh-out-loud-poster.jpg",
                            RatingScore = 4f,
                            ReleaseDate = new DateTime(2022, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://example.com/laugh-out-loud-trailer.mp4"
                        },
                        new
                        {
                            Id = 3,
                            Description = "A dramatic journey of love and loss.",
                            Duration = new TimeSpan(0, 1, 50, 0, 0),
                            Name = "Deep Emotions",
                            PosterUrl = "https://example.com/deep-emotions-poster.jpg",
                            RatingScore = 4.2f,
                            ReleaseDate = new DateTime(2021, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://example.com/deep-emotions-trailer.mp4"
                        });
                });

            modelBuilder.Entity("Cinema.DAL.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Cinema.DAL.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Cinema.DAL.Entities.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.Property<int>("SeatRow")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HallId", "SeatRow", "SeatNumber")
                        .IsUnique();

                    b.ToTable("Seats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HallId = 1,
                            SeatNumber = 1,
                            SeatRow = 1
                        },
                        new
                        {
                            Id = 2,
                            HallId = 1,
                            SeatNumber = 2,
                            SeatRow = 1
                        },
                        new
                        {
                            Id = 3,
                            HallId = 1,
                            SeatNumber = 3,
                            SeatRow = 1
                        },
                        new
                        {
                            Id = 4,
                            HallId = 1,
                            SeatNumber = 4,
                            SeatRow = 1
                        },
                        new
                        {
                            Id = 5,
                            HallId = 1,
                            SeatNumber = 5,
                            SeatRow = 1
                        },
                        new
                        {
                            Id = 6,
                            HallId = 1,
                            SeatNumber = 6,
                            SeatRow = 1
                        },
                        new
                        {
                            Id = 7,
                            HallId = 1,
                            SeatNumber = 1,
                            SeatRow = 2
                        },
                        new
                        {
                            Id = 8,
                            HallId = 1,
                            SeatNumber = 2,
                            SeatRow = 2
                        },
                        new
                        {
                            Id = 9,
                            HallId = 1,
                            SeatNumber = 3,
                            SeatRow = 2
                        },
                        new
                        {
                            Id = 10,
                            HallId = 1,
                            SeatNumber = 4,
                            SeatRow = 2
                        },
                        new
                        {
                            Id = 11,
                            HallId = 1,
                            SeatNumber = 5,
                            SeatRow = 2
                        },
                        new
                        {
                            Id = 12,
                            HallId = 1,
                            SeatNumber = 6,
                            SeatRow = 2
                        },
                        new
                        {
                            Id = 13,
                            HallId = 1,
                            SeatNumber = 1,
                            SeatRow = 3
                        },
                        new
                        {
                            Id = 14,
                            HallId = 1,
                            SeatNumber = 2,
                            SeatRow = 3
                        },
                        new
                        {
                            Id = 15,
                            HallId = 1,
                            SeatNumber = 3,
                            SeatRow = 3
                        },
                        new
                        {
                            Id = 16,
                            HallId = 1,
                            SeatNumber = 4,
                            SeatRow = 3
                        },
                        new
                        {
                            Id = 17,
                            HallId = 1,
                            SeatNumber = 5,
                            SeatRow = 3
                        },
                        new
                        {
                            Id = 18,
                            HallId = 1,
                            SeatNumber = 6,
                            SeatRow = 3
                        },
                        new
                        {
                            Id = 19,
                            HallId = 1,
                            SeatNumber = 1,
                            SeatRow = 4
                        },
                        new
                        {
                            Id = 20,
                            HallId = 1,
                            SeatNumber = 2,
                            SeatRow = 4
                        },
                        new
                        {
                            Id = 21,
                            HallId = 1,
                            SeatNumber = 3,
                            SeatRow = 4
                        },
                        new
                        {
                            Id = 22,
                            HallId = 1,
                            SeatNumber = 4,
                            SeatRow = 4
                        },
                        new
                        {
                            Id = 23,
                            HallId = 1,
                            SeatNumber = 5,
                            SeatRow = 4
                        },
                        new
                        {
                            Id = 24,
                            HallId = 1,
                            SeatNumber = 6,
                            SeatRow = 4
                        },
                        new
                        {
                            Id = 25,
                            HallId = 1,
                            SeatNumber = 1,
                            SeatRow = 5
                        },
                        new
                        {
                            Id = 26,
                            HallId = 1,
                            SeatNumber = 2,
                            SeatRow = 5
                        },
                        new
                        {
                            Id = 27,
                            HallId = 1,
                            SeatNumber = 3,
                            SeatRow = 5
                        },
                        new
                        {
                            Id = 28,
                            HallId = 1,
                            SeatNumber = 4,
                            SeatRow = 5
                        },
                        new
                        {
                            Id = 29,
                            HallId = 1,
                            SeatNumber = 5,
                            SeatRow = 5
                        },
                        new
                        {
                            Id = 30,
                            HallId = 1,
                            SeatNumber = 6,
                            SeatRow = 5
                        },
                        new
                        {
                            Id = 31,
                            HallId = 1,
                            SeatNumber = 1,
                            SeatRow = 6
                        },
                        new
                        {
                            Id = 32,
                            HallId = 1,
                            SeatNumber = 2,
                            SeatRow = 6
                        },
                        new
                        {
                            Id = 33,
                            HallId = 1,
                            SeatNumber = 3,
                            SeatRow = 6
                        },
                        new
                        {
                            Id = 34,
                            HallId = 1,
                            SeatNumber = 4,
                            SeatRow = 6
                        },
                        new
                        {
                            Id = 35,
                            HallId = 1,
                            SeatNumber = 5,
                            SeatRow = 6
                        },
                        new
                        {
                            Id = 36,
                            HallId = 1,
                            SeatNumber = 6,
                            SeatRow = 6
                        },
                        new
                        {
                            Id = 37,
                            HallId = 2,
                            SeatNumber = 1,
                            SeatRow = 1
                        },
                        new
                        {
                            Id = 38,
                            HallId = 2,
                            SeatNumber = 2,
                            SeatRow = 1
                        },
                        new
                        {
                            Id = 39,
                            HallId = 2,
                            SeatNumber = 3,
                            SeatRow = 1
                        },
                        new
                        {
                            Id = 40,
                            HallId = 2,
                            SeatNumber = 4,
                            SeatRow = 1
                        },
                        new
                        {
                            Id = 41,
                            HallId = 2,
                            SeatNumber = 5,
                            SeatRow = 1
                        },
                        new
                        {
                            Id = 42,
                            HallId = 2,
                            SeatNumber = 6,
                            SeatRow = 1
                        },
                        new
                        {
                            Id = 43,
                            HallId = 2,
                            SeatNumber = 1,
                            SeatRow = 2
                        },
                        new
                        {
                            Id = 44,
                            HallId = 2,
                            SeatNumber = 2,
                            SeatRow = 2
                        },
                        new
                        {
                            Id = 45,
                            HallId = 2,
                            SeatNumber = 3,
                            SeatRow = 2
                        },
                        new
                        {
                            Id = 46,
                            HallId = 2,
                            SeatNumber = 4,
                            SeatRow = 2
                        },
                        new
                        {
                            Id = 47,
                            HallId = 2,
                            SeatNumber = 5,
                            SeatRow = 2
                        },
                        new
                        {
                            Id = 48,
                            HallId = 2,
                            SeatNumber = 6,
                            SeatRow = 2
                        },
                        new
                        {
                            Id = 49,
                            HallId = 2,
                            SeatNumber = 1,
                            SeatRow = 3
                        },
                        new
                        {
                            Id = 50,
                            HallId = 2,
                            SeatNumber = 2,
                            SeatRow = 3
                        },
                        new
                        {
                            Id = 51,
                            HallId = 2,
                            SeatNumber = 3,
                            SeatRow = 3
                        },
                        new
                        {
                            Id = 52,
                            HallId = 2,
                            SeatNumber = 4,
                            SeatRow = 3
                        },
                        new
                        {
                            Id = 53,
                            HallId = 2,
                            SeatNumber = 5,
                            SeatRow = 3
                        },
                        new
                        {
                            Id = 54,
                            HallId = 2,
                            SeatNumber = 6,
                            SeatRow = 3
                        },
                        new
                        {
                            Id = 55,
                            HallId = 2,
                            SeatNumber = 1,
                            SeatRow = 4
                        },
                        new
                        {
                            Id = 56,
                            HallId = 2,
                            SeatNumber = 2,
                            SeatRow = 4
                        },
                        new
                        {
                            Id = 57,
                            HallId = 2,
                            SeatNumber = 3,
                            SeatRow = 4
                        },
                        new
                        {
                            Id = 58,
                            HallId = 2,
                            SeatNumber = 4,
                            SeatRow = 4
                        },
                        new
                        {
                            Id = 59,
                            HallId = 2,
                            SeatNumber = 5,
                            SeatRow = 4
                        },
                        new
                        {
                            Id = 60,
                            HallId = 2,
                            SeatNumber = 6,
                            SeatRow = 4
                        },
                        new
                        {
                            Id = 61,
                            HallId = 2,
                            SeatNumber = 1,
                            SeatRow = 5
                        },
                        new
                        {
                            Id = 62,
                            HallId = 2,
                            SeatNumber = 2,
                            SeatRow = 5
                        },
                        new
                        {
                            Id = 63,
                            HallId = 2,
                            SeatNumber = 3,
                            SeatRow = 5
                        },
                        new
                        {
                            Id = 64,
                            HallId = 2,
                            SeatNumber = 4,
                            SeatRow = 5
                        },
                        new
                        {
                            Id = 65,
                            HallId = 2,
                            SeatNumber = 5,
                            SeatRow = 5
                        },
                        new
                        {
                            Id = 66,
                            HallId = 2,
                            SeatNumber = 6,
                            SeatRow = 5
                        },
                        new
                        {
                            Id = 67,
                            HallId = 2,
                            SeatNumber = 1,
                            SeatRow = 6
                        },
                        new
                        {
                            Id = 68,
                            HallId = 2,
                            SeatNumber = 2,
                            SeatRow = 6
                        },
                        new
                        {
                            Id = 69,
                            HallId = 2,
                            SeatNumber = 3,
                            SeatRow = 6
                        },
                        new
                        {
                            Id = 70,
                            HallId = 2,
                            SeatNumber = 4,
                            SeatRow = 6
                        },
                        new
                        {
                            Id = 71,
                            HallId = 2,
                            SeatNumber = 5,
                            SeatRow = 6
                        },
                        new
                        {
                            Id = 72,
                            HallId = 2,
                            SeatNumber = 6,
                            SeatRow = 6
                        });
                });

            modelBuilder.Entity("Cinema.DAL.Entities.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TicketPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("HallId");

                    b.HasIndex("MovieId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HallId = 1,
                            MovieId = 1,
                            StartTime = new DateTime(2025, 6, 15, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TicketPrice = 12.50m
                        },
                        new
                        {
                            Id = 2,
                            HallId = 2,
                            MovieId = 2,
                            StartTime = new DateTime(2025, 6, 16, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TicketPrice = 13.50m
                        },
                        new
                        {
                            Id = 3,
                            HallId = 1,
                            MovieId = 3,
                            StartTime = new DateTime(2025, 6, 17, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TicketPrice = 16.50m
                        });
                });

            modelBuilder.Entity("Cinema.DAL.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int>("SeatId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<string>("TicketNumber")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.HasIndex("SeatId");

                    b.HasIndex("SessionId");

                    b.HasIndex("TicketNumber")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Cinema.DAL.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("MovieGenre", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MovieGenre");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            GenreId = 1
                        },
                        new
                        {
                            MovieId = 2,
                            GenreId = 2
                        },
                        new
                        {
                            MovieId = 3,
                            GenreId = 3
                        });
                });

            modelBuilder.Entity("Cinema.DAL.Entities.Seat", b =>
                {
                    b.HasOne("Cinema.DAL.Entities.Hall", "Hall")
                        .WithMany("Seats")
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("Cinema.DAL.Entities.Session", b =>
                {
                    b.HasOne("Cinema.DAL.Entities.Hall", "Hall")
                        .WithMany("Sessions")
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema.DAL.Entities.Movie", "Movie")
                        .WithMany("Sessions")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Hall");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Cinema.DAL.Entities.Ticket", b =>
                {
                    b.HasOne("Cinema.DAL.Entities.Payment", "Payment")
                        .WithMany("Tickets")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema.DAL.Entities.Seat", "Seat")
                        .WithMany("Tickets")
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema.DAL.Entities.Session", "Session")
                        .WithMany("Tickets")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cinema.DAL.Entities.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Payment");

                    b.Navigation("Seat");

                    b.Navigation("Session");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Cinema.DAL.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Cinema.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Cinema.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Cinema.DAL.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Cinema.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieGenre", b =>
                {
                    b.HasOne("Cinema.DAL.Entities.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema.DAL.Entities.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cinema.DAL.Entities.Hall", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("Cinema.DAL.Entities.Movie", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("Cinema.DAL.Entities.Payment", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Cinema.DAL.Entities.Seat", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Cinema.DAL.Entities.Session", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Cinema.DAL.Entities.User", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
